// sum array- first parallel version

#include <stdio.h>
#include <mpi.h>

#define N 100000
#define MSG_DATA 100
#define MSG_RESULT 101

void master(void);
void slave(void);

int main(int argc, int char **argv){
  int myrank;
  MPI_Init(&argc,&argv);

  MPI_Comm_rank(MPI_COMM_WORLD,&myrank);

  if(myrank ==0)
    master();
  else
    slave();

  MPI_Finalize();
  return 0;
}

void master(void){
  float array[N];
  double mysum=0,tmpsum;
  unsigned long long i;
  MPI_Status status;

  for(i=0;i<N;i++)
    array[i]=i+1;

  MPI_Send(array,N/2,MPI_FLOAT,1,MSG_DATA,MPI_COMM_WORLD);
  MPI_Send(array+N/2,N/2,MPI_FLOAT,2,MSG_DATA,MPI_COMM_WORLD);

  MPI_Recv(&tmpsum,1,MPI_DOUBLE,1,MSG_RESULT,MPI_COMM_WORLD,&status);
  mysum += tmpsum;
  MPI_Recv(&tmpsum,1,MPI_DOUBLE,2,MSG_RESULT,MPI_COMM_WORLD,&status);
  mysum += tmpsum;

  printf("%lf\n",mysum);
}

void slave(void){
  float array[N];
  double sum;
  unsigned long long i;
  MPI_Status status;

  MPI_Recv(array,N/2,MPI_FLOAT,0,MSG_DATA,MPI_COMM_WORLD,&status);
  for(i=0,sum=0;i<N/2;i++)
    sum+=array[i];

  MPI_Send(&sum,1,MPI_DOUBLE,0,MSG_RESULT,MPI_COMM_WORLD);
}
